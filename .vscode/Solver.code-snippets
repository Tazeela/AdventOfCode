{
	// Place your AdventOfCode workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

   "New Solver" : {
      "scope" : "",
      "prefix": "newsolver",
      "body": [
         "using AdventLib;",
         "using Microsoft.VisualStudio.TestTools.UnitTesting;",
         "",
         "namespace AdventOfCode${1|2022,2023|};",
         "",
         "/// <summary>",
         "/// Solver for [day $2](https://adventofcode.com/$1/day/$2)",
         "/// </summary>",
         "public class $TM_FILENAME_BASE : AdventSolver {",
         "\tpublic override string Day => \"day$2\";",
         "",
         "\tpublic override void Solve(string filename) {",
         "\t\tint count1 = 0;",
         "\t\tint count2 = 0;",
         "",
         " \t\t//List<string> allData = [.. ReadLines(filename)];",
         "\t\tforeach (String game in ReadLines(filename)) {"
         "\t\t\t$0",
         "\t\t}",
         "",
         "\t\t Console.WriteLine(\"Solution for part 1 is: \" + count1);",
         "\t\t Console.WriteLine(\"Solution for part 2 is: \" + count2);",
         "\t}",
         "",
         "\t[TestClass]"
         "\tpublic class ${TM_FILENAME_BASE}Test {",
         "",
         "\t\t[TestMethod]"
         "\t\tpublic void Test1() {",
         "\t\t}",
         
         "\t}",
         "}"
      ]
   }
}